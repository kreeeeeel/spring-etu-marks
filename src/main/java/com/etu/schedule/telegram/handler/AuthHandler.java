package com.etu.schedule.telegram.handler;

import com.etu.schedule.service.AuthorizationService;
import com.etu.schedule.service.TelegramService;
import com.etu.schedule.telegram.TelegramHandler;
import lombok.RequiredArgsConstructor;
import org.apache.commons.lang3.tuple.Pair;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText;
import org.telegram.telegrambots.meta.api.objects.CallbackQuery;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;

import java.util.List;

@Component
@RequiredArgsConstructor
public class AuthHandler implements TelegramHandler{

    private final AuthorizationService authorizationService;
    private final TelegramService telegramService;

    @Override
    public String getCommand() {
        return "auth";
    }

    @Override
    public List<String> getListCallback() {
        return null;
    }

    @Override
    public EditMessageText editMessageFromCallback(CallbackQuery callbackQuery) {
        return null;
    }

    @Override
    public String getDescription() {
        return "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –∫–∞–±–∏–Ω–µ—Ç–µ";
    }

    @Override
    public InlineKeyboardMarkup getInlineKeyboard(Long userId) {
        return null;
    }

    @Override
    public Pair<String, Boolean> preCommand(Update update) {

        if (!update.getMessage().getFrom().getId().equals(update.getMessage().getChatId())){
            return Pair.of("""
                    üòë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
                    
                    –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –≥—Ä—É–ø–ø–µ
                    –¢–∞–∫ –∫–∞–∫ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                    """, false);
        }

        String INVALID_MESSAGE = """
            üòë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
            –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –õ–≠–¢–ò
            –ß—Ç–æ–±—ã –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º, –±–æ—Ç —Å–º–æ–≥ –æ—Ç–º–µ—á–∞—Ç—å—Å—è –∑–∞ –≤–∞—Å
            
            –ü—Ä–∏–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è:
            /auth example@example.com password
            
            –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –º—ã —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –∫—É–∫–∏, –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
            """;

        String message = telegramService.getMessageReplaced(
                update.getMessage().getText().substring(("/" + getCommand()).length())
        ).trim();
        if (message.isEmpty()){
            return Pair.of(INVALID_MESSAGE, false);
        }

        String[] split = message.split(" ");
        if (split.length != 2){
            return Pair.of(INVALID_MESSAGE, false);
        }

        if (!split[0].matches("^[-\\w.]+@([A-z0-9][-A-z0-9]+\\.)+[A-z]{2,4}$")){
            return Pair.of("üòë –í–∞—à–∞ –ø–æ—á—Ç–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.", false);
        }
        return Pair.of("‚åõ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ..", true);
    }

    @Override
    public String postCommand(Update update) {
        String[] emailWithPassword = telegramService.getMessageReplaced(
                    update.getMessage().getText()
                )
                .substring(("/" + getCommand()).length())
                .trim()
                .split(" ");

        String email = emailWithPassword[0];
        String password = emailWithPassword[1];
        return authorizationService.authEtu(update.getMessage().getFrom().getId(), email, password);
    }

}
